{
    "docs": [
        {
            "location": "/about/",
            "text": "SoftDes 2018\n\n\nSobre o webapp\n\n\n\n\nEste \u00e9 um webapp criado para professores postarem desafios de Design de Software e para os alunos submeterem suas respostas, obtendo feedback imediato sobre a sua solu\u00e7\u00e3o.",
            "title": "Home"
        },
        {
            "location": "/about/#softdes-2018",
            "text": "",
            "title": "SoftDes 2018"
        },
        {
            "location": "/about/#sobre-o-webapp",
            "text": "",
            "title": "Sobre o webapp"
        },
        {
            "location": "/about/#este-e-um-webapp-criado-para-professores-postarem-desafios-de-design-de-software-e-para-os-alunos-submeterem-suas-respostas-obtendo-feedback-imediato-sobre-a-sua-solucao",
            "text": "",
            "title": "Este \u00e9 um webapp criado para professores postarem desafios de Design de Software e para os alunos submeterem suas respostas, obtendo feedback imediato sobre a sua solu\u00e7\u00e3o."
        },
        {
            "location": "/users/",
            "text": "Guia para os alunos\n\n\nComo usar\n\n\n\n\nhttp://localhost:80\n - Link de acesso.\n\n\nDashboard lateral esquerda\n - Escolher desse menu o desafio que queira responder.\n\n\nEscolher Arquivo\n - Bot\u00e3o para selecionar o c\u00f3digo fonte com sua solu\u00e7\u00e3o.\n\n\nEnviar\n - Bot\u00e3o de envio.\n\n\n\n\nResposta correta\n\n\nCaso sua resposta esteja correta, o Feedback e o Resultado devem sair como na imagem a seguir:\n\n\n\n\nResposta errada\n\n\nCaso sua resposta esteja errada, o Feedback e o Resultado devem sair como na imagem a seguir:",
            "title": "Guia Alunos"
        },
        {
            "location": "/users/#guia-para-os-alunos",
            "text": "",
            "title": "Guia para os alunos"
        },
        {
            "location": "/users/#como-usar",
            "text": "http://localhost:80  - Link de acesso.  Dashboard lateral esquerda  - Escolher desse menu o desafio que queira responder.  Escolher Arquivo  - Bot\u00e3o para selecionar o c\u00f3digo fonte com sua solu\u00e7\u00e3o.  Enviar  - Bot\u00e3o de envio.",
            "title": "Como usar"
        },
        {
            "location": "/users/#resposta-correta",
            "text": "Caso sua resposta esteja correta, o Feedback e o Resultado devem sair como na imagem a seguir:",
            "title": "Resposta correta"
        },
        {
            "location": "/users/#resposta-errada",
            "text": "Caso sua resposta esteja errada, o Feedback e o Resultado devem sair como na imagem a seguir:",
            "title": "Resposta errada"
        },
        {
            "location": "/teachers/",
            "text": "Guia para os professores\n\n\nComo adicionar usuarios\n\n\nPara adicionar novos usu\u00e1rios \u00e9 necess\u00e1rio alterar/criar um arquivo users.csv na ra\u00edz do projeto.\nEle deve ser populado linha por linha, em que cada linha representa um aluno, no formato : Login,Senha\n\n\n\nFeito isso, o script add_user.py dever\u00e1 ser rodado para adicionar na base de dados os novos usu\u00e1rios.\n\n\nComo adicionar novos desafios\n\n\nEntrar na base de dados atrav\u00e9s do sqlite3 e rodar a uma query de inser\u00e7\u00e3o na table QUIZ.\n\n\nExemplo:\n\n\nInsert into QUIZ\n(numb, release, expire, problem, tests, results, diagnosis)\nvalues\n(2, '2018-08-02', '2020-12-31 23:59:59', 'Exemplo de problema-novo', '[[1],[2],[3]]', '[0, 0, 0]', '[\"a\",\"b\",\"c\"]')\n\n\n\nNa imagem acima \u00e9 poss\u00edvel verificar que o novo desafio foi inserido e est\u00e1 vis\u00edvel como \"Desafio 2\" no menu lateral.",
            "title": "Guia Professores"
        },
        {
            "location": "/teachers/#guia-para-os-professores",
            "text": "",
            "title": "Guia para os professores"
        },
        {
            "location": "/teachers/#como-adicionar-usuarios",
            "text": "Para adicionar novos usu\u00e1rios \u00e9 necess\u00e1rio alterar/criar um arquivo users.csv na ra\u00edz do projeto.\nEle deve ser populado linha por linha, em que cada linha representa um aluno, no formato : Login,Senha  Feito isso, o script add_user.py dever\u00e1 ser rodado para adicionar na base de dados os novos usu\u00e1rios.",
            "title": "Como adicionar usuarios"
        },
        {
            "location": "/teachers/#como-adicionar-novos-desafios",
            "text": "Entrar na base de dados atrav\u00e9s do sqlite3 e rodar a uma query de inser\u00e7\u00e3o na table QUIZ.  Exemplo:  Insert into QUIZ\n(numb, release, expire, problem, tests, results, diagnosis)\nvalues\n(2, '2018-08-02', '2020-12-31 23:59:59', 'Exemplo de problema-novo', '[[1],[2],[3]]', '[0, 0, 0]', '[\"a\",\"b\",\"c\"]')  \nNa imagem acima \u00e9 poss\u00edvel verificar que o novo desafio foi inserido e est\u00e1 vis\u00edvel como \"Desafio 2\" no menu lateral.",
            "title": "Como adicionar novos desafios"
        },
        {
            "location": "/dev/",
            "text": "Guia para os desenvolvedores\n\n\nComo configurar o ambiente de desenvolvimento\n\n\n\n\nCriar uma base de dados quiz.db atrav\u00e9s do sqlite3.\n   \n$ sqlite3 quiz.db\n\n\nRodar as queries presentes no arquivo quiz.sql no terminal do sqlite aberto nessa base de dados.\n\n\nPopular um arquivo users.csv com usuarios(*Obs: -logins 'admin' e 'fabioja' s\u00e3o reservados para professores).\n\n\nRodar o script adduser.py para adicionar esses usuarios na base de dados.\n\n\nRodar o arquivo softdes.py, que ir\u00e1 inicializar o servidor do programa.\n\n\n\n\nInstala\u00e7\u00e3o do software\n\n\nsqlite3, Flask, Flask_httpauth, hashlib e python s\u00e3o pacotes necess\u00e1rios para rodar o servidor.\n\n\nEstrutura do c\u00f3digo em alto n\u00edvel\n\n\nEsse projeto faz uso de python, javascript, SQL, html, css e javascript",
            "title": "Guia de Desenvolvimento"
        },
        {
            "location": "/dev/#guia-para-os-desenvolvedores",
            "text": "",
            "title": "Guia para os desenvolvedores"
        },
        {
            "location": "/dev/#como-configurar-o-ambiente-de-desenvolvimento",
            "text": "Criar uma base de dados quiz.db atrav\u00e9s do sqlite3.\n    $ sqlite3 quiz.db  Rodar as queries presentes no arquivo quiz.sql no terminal do sqlite aberto nessa base de dados.  Popular um arquivo users.csv com usuarios(*Obs: -logins 'admin' e 'fabioja' s\u00e3o reservados para professores).  Rodar o script adduser.py para adicionar esses usuarios na base de dados.  Rodar o arquivo softdes.py, que ir\u00e1 inicializar o servidor do programa.",
            "title": "Como configurar o ambiente de desenvolvimento"
        },
        {
            "location": "/dev/#instalacao-do-software",
            "text": "sqlite3, Flask, Flask_httpauth, hashlib e python s\u00e3o pacotes necess\u00e1rios para rodar o servidor.",
            "title": "Instala\u00e7\u00e3o do software"
        },
        {
            "location": "/dev/#estrutura-do-codigo-em-alto-nivel",
            "text": "Esse projeto faz uso de python, javascript, SQL, html, css e javascript",
            "title": "Estrutura do c\u00f3digo em alto n\u00edvel"
        },
        {
            "location": "/api/",
            "text": "Guia para a API\n\n\nCommands\n\n\n\n\n\n\nhttp://0.0.0.0/\n \n\n\n[GET]\n - Carrega o pop-up de login inicialmente e caso j\u00e1 esteja logado carrega a pagina inicial mostrando os desafios dispon\u00edveis e envios.\n  * Parameters: ID (Id do desafio a ser exibido) - N\u00e3o obrigat\u00f3rio.\n\n\n[POST]\n - Envia o desafio carregado pelo aluno para o lambda.\n  * Parameters: ID (Id do desafio que foi enviado)\n  * Files: Arquivo da solu\u00e7\u00e3o ao desafio.\n\n\n\n\n\n\nhttp://0.0.0.0/pass\n \n\n\n[GET]\n - Carrega o pop-up de login inicialmente e caso j\u00e1 esteja logado a pagina para a troca de senha.\n\n\n[POST]\n - Realiza a troca de senha do usu\u00e1rio.\n * Form['old'] - Senha antiga inserida pelo usuario.\n * Form['new'] - Senha nova inserida pelo usuario.\n * Form['again'] - Senha nova repetida inserida pelo usuario.\n\n\n\n\n\n\nhttp://0.0.0.0/logout\n \n\n\n[GET]\n - Desloga o usuario e carrega o index.html.",
            "title": "Documenta\u00e7\u00e3o da API"
        },
        {
            "location": "/api/#guia-para-a-api",
            "text": "",
            "title": "Guia para a API"
        },
        {
            "location": "/api/#commands",
            "text": "http://0.0.0.0/    [GET]  - Carrega o pop-up de login inicialmente e caso j\u00e1 esteja logado carrega a pagina inicial mostrando os desafios dispon\u00edveis e envios.\n  * Parameters: ID (Id do desafio a ser exibido) - N\u00e3o obrigat\u00f3rio.  [POST]  - Envia o desafio carregado pelo aluno para o lambda.\n  * Parameters: ID (Id do desafio que foi enviado)\n  * Files: Arquivo da solu\u00e7\u00e3o ao desafio.    http://0.0.0.0/pass    [GET]  - Carrega o pop-up de login inicialmente e caso j\u00e1 esteja logado a pagina para a troca de senha.  [POST]  - Realiza a troca de senha do usu\u00e1rio.\n * Form['old'] - Senha antiga inserida pelo usuario.\n * Form['new'] - Senha nova inserida pelo usuario.\n * Form['again'] - Senha nova repetida inserida pelo usuario.    http://0.0.0.0/logout    [GET]  - Desloga o usuario e carrega o index.html.",
            "title": "Commands"
        }
    ]
}